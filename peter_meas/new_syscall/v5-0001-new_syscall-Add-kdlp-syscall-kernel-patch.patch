From a8844bee214a9604ab94d990d218fcd5842cc119 Mon Sep 17 00:00:00 2001
From: Peter Meas <peter_meas@fall2025-uml.kdlp.underground.software>
Date: Tue, 23 Sep 2025 04:09:05 +0000
Subject: [PATCH v5 1/4] new_syscall: Add kdlp syscall kernel patch

Signed-off-by: Peter Meas <peter_meas@fall2025-uml.kdlp.underground.software>
---
 peter_meas/new_syscall/kernel.patch | 117 ++++++++++++++++++++++++++++
 1 file changed, 117 insertions(+)
 create mode 100644 peter_meas/new_syscall/kernel.patch

diff --git a/peter_meas/new_syscall/kernel.patch b/peter_meas/new_syscall/kernel.patch
new file mode 100644
index 0000000..4528c5d
--- /dev/null
+++ b/peter_meas/new_syscall/kernel.patch
@@ -0,0 +1,117 @@
+From bd4a9008347841a8f46eb284726d473e3a26c2c3 Mon Sep 17 00:00:00 2001
+From: Peter Meas <peter_meas@fall2025-uml.kdlp.underground.software>
+Date: Tue, 23 Sep 2025 04:06:52 +0000
+Subject: [PATCH] Add kdlp syscall for student name and task
+
+Signed-off-by: Peter Meas <peter_meas@fall2025-uml.kdlp.underground.software>
+---
+ include/linux/syscalls.h          |  1 +
+ include/uapi/asm-generic/unistd.h |  5 ++++-
+ kernel/Makefile                   |  2 +-
+ kernel/kdlp.c                     | 34 +++++++++++++++++++++++++++++++
+ localversion                      |  1 +
+ scripts/syscall.tbl               |  1 +
+ 6 files changed, 42 insertions(+), 2 deletions(-)
+ create mode 100644 kernel/kdlp.c
+ create mode 100644 localversion
+
+diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
+index e5603cc91..7d9939140 100644
+--- a/include/linux/syscalls.h
++++ b/include/linux/syscalls.h
+@@ -302,6 +302,7 @@ static inline int is_syscall_trace_event(struct trace_event_call *tp_event)
+  * include the prototypes if CONFIG_ARCH_HAS_SYSCALL_WRAPPER is enabled.
+  */
+ #ifndef CONFIG_ARCH_HAS_SYSCALL_WRAPPER
++asmlinkage long sys_kdlp(char __user *buffer, size_t size);
+ asmlinkage long sys_io_setup(unsigned nr_reqs, aio_context_t __user *ctx);
+ asmlinkage long sys_io_destroy(aio_context_t ctx);
+ asmlinkage long sys_io_submit(aio_context_t, long,
+diff --git a/include/uapi/asm-generic/unistd.h b/include/uapi/asm-generic/unistd.h
+index 2892a4502..3ff63ae5a 100644
+--- a/include/uapi/asm-generic/unistd.h
++++ b/include/uapi/asm-generic/unistd.h
+@@ -852,8 +852,11 @@ __SYSCALL(__NR_removexattrat, sys_removexattrat)
+ #define __NR_open_tree_attr 467
+ __SYSCALL(__NR_open_tree_attr, sys_open_tree_attr)
+
++#define __NR_kdlp 468
++__SYSCALL(__NR_kdlp, sys_kdlp)
++
+ #undef __NR_syscalls
+-#define __NR_syscalls 468
++#define __NR_syscalls 469
+
+ /*
+  * 32 bit systems traditionally used different
+diff --git a/kernel/Makefile b/kernel/Makefile
+index 32e80dd62..435837cc1 100644
+--- a/kernel/Makefile
++++ b/kernel/Makefile
+@@ -10,7 +10,7 @@ obj-y     = fork.o exec_domain.o panic.o \
+	    extable.o params.o \
+	    kthread.o sys_ni.o nsproxy.o \
+	    notifier.o ksysfs.o cred.o reboot.o \
+-	    async.o range.o smpboot.o ucount.o regset.o ksyms_common.o
++	    async.o range.o smpboot.o ucount.o regset.o ksyms_common.o kdlp.o
+
+ obj-$(CONFIG_USERMODE_DRIVER) += usermode_driver.o
+ obj-$(CONFIG_MULTIUSER) += groups.o
+diff --git a/kernel/kdlp.c b/kernel/kdlp.c
+new file mode 100644
+index 000000000..f064404f6
+--- /dev/null
++++ b/kernel/kdlp.c
+@@ -0,0 +1,34 @@
++#include <linux/kernel.h>
++#include <linux/module.h>
++#include <linux/sched.h>
++#include <linux/uaccess.h>
++#include <linux/syscalls.h>
++
++
++SYSCALL_DEFINE2(kdlp, char __user *, buffer, size_t, size) {
++
++	char buf[128];
++	struct task_struct *task = current;
++	char comm[TASK_COMM_LEN];
++	size_t msg_len;
++
++	if (size < 128) {
++		return -EINVAL; // buffer too small
++	}
++
++	if (!access_ok(buffer, size)) {
++	// is user space pointer valid to write?
++		return -EFAULT;
++}
++	// format message into local buffer
++	get_task_comm(comm, current); //get current task
++	int len = snprintf(buf, sizeof(buf), "%s is running %s", "Peter Meas", comm);
++	msg_len = min_t(size_t, len, size);
++	if (copy_to_user(buffer, buf, msg_len)) {
++		return -EFAULT;
++	}
++	return msg_len;
++
++
++}
++
+diff --git a/localversion b/localversion
+new file mode 100644
+index 000000000..2eeecb9ab
+--- /dev/null
++++ b/localversion
+@@ -0,0 +1 @@
++-kdlp
+diff --git a/scripts/syscall.tbl b/scripts/syscall.tbl
+index 580b4e246..2f2a0e34c 100644
+--- a/scripts/syscall.tbl
++++ b/scripts/syscall.tbl
+@@ -408,3 +408,4 @@
+ 465	common	listxattrat			sys_listxattrat
+ 466	common	removexattrat			sys_removexattrat
+ 467	common	open_tree_attr			sys_open_tree_attr
++468	common	kdlp				sys_kdlp
+--
+2.51.0
--
2.51.0

